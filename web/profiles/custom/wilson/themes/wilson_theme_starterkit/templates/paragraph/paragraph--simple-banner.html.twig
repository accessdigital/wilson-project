{#
/**
 * @file
 * Default theme implementation to display a simple banner paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% extends "paragraph.html.twig" %}

{% set content_classes = [
  'grid',
  'gap-10',
  settings_layout,
] %}

{% block content %}
  <div{{ create_attribute({'class': content_classes}) }}>
    <section class="prose">
      {% if content.field_pre_header|render %}
        {{ content.field_pre_header }}
      {% endif %}

      {% if content.field_headline|render %}
        <h2>{{ paragraph.field_headline.0.value|check_markup('full_html') }}</h2>
      {% endif %}

      {% if content.field_text_column|render %}
        {{ content.field_text_column|field_value }}
      {% endif %}
    </section>

    {% if content.field_primary_cta|render or content.field_secondary_cta|render %}
      <nav class="flex flex-wrap gap-4">
        {{ content.field_primary_cta }}
        {{ content.field_secondary_cta }}
      </nav>
    {% endif %}
  </div>
{% endblock %}
