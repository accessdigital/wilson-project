{#
/**
 * @file
 * Default theme implementation to display a panel paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# Paragraph classes #}
{% set paragraph_classes = [
  'section',
  'section--' ~ paragraph.bundle|clean_class,
  'overflow-x-hidden',
] %}

{# Container classes #}
{% set container_classes = [
  'section__container',
  settings_container_position,
  settings_container_height,
] %}

{# Inner container classes #}
{% set inner_container_classes = [
  'w-full',
  'section__inner',
  settings_container_height ? 'flex flex-col self-stretch',
  settings_padding_top,
  settings_padding_bottom,
  settings_inner_position,
] %}

{# Content classes #}
{% set content_classes = [
  'sm:grid',
  'sm:grid-cols-2',
  settings_container_height ? 'min-h-full',
  'overflow-hidden',
  paragraph.field_container_width.0.value == 'full' ? '-mx-5' : '-mx-5 lg:mx-0',
  has_bg_image ? 'section-bg bg-center bg-no-repeat bg-cover',
  background_colour_classes,
] %}

{% block paragraph %}
  <div{{ attributes.addClass(paragraph_classes)|without('id') }}>
    {% block paragraph_container %}
      <div{{ create_attribute({'class': container_classes}) }}>
        {% block paragraph_inner %}
          <div{{ create_attribute({'class': inner_container_classes}) }}>
            {% block content %}
              <div{{ create_attribute({'class': content_classes, 'id': attributes.id}) }}>
                <div class="px-5 py-10 md:px-10 lg:p-16 xl:px-20 flex justify-center {{ settings_vertical_alignment }}">
                  <div class="w-full max-w-screen-sm prose" {{ create_attribute({'data-aos': settings_container_aos}) }}>
                    {% if content.field_pre_header|render %}
                      {{ content.field_pre_header }}
                    {% endif %}

                    {% if content.field_headline|render %}
                      <h2 class="my-0">{{ paragraph.field_headline.0.value|check_markup('full_html') }}</h2>
                    {% endif %}

                    {{ content.field_text_column|field_value }}

                    {% if content.field_primary_cta|render or content.field_secondary_cta|render %}
                      <nav class="mt-6 -mb-2 md:flex-shrink-0 flex flex-wrap gap-4">
                        {{ content.field_primary_cta }}
                        {{ content.field_secondary_cta }}
                      </nav>
                    {% endif %}
                  </div>
                </div>
                <div class="w-full image-cover {{ settings_media_order }}">
                  {{ content.field_media_column|field_value }}
                </div>
              </div>
            {% endblock %}
          </div>
        {% endblock %}
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
