{#
/**
 * @file
 * Default theme implementation to display a content slider paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% extends "paragraph.html.twig" %}

{% set classes = [
  'carousel',
  'carousel--slider',
  'w-[80vw]',
  'md:w-auto'
] %}

{% set content_attributes = {
  'class': classes,
  'data-slides-xxl': settings_slides_perview_2xl,
  'data-slides-xl': settings_slides_perview_xl,
  'data-slides-lg': settings_slides_perview_lg,
  'data-slides-md': settings_slides_perview_md,
  'data-slides-sm': settings_slides_perview_sm,
} %}

{% block content %}
  {{ attach_library('wilson_theme_starterkit/slider') }}
  <div{{ create_attribute(content_attributes) }}>
    <div class="glide">
      <div data-glide-el="track" class="glide__track{% if paragraph.field_content_slider_overflow.value %} !overflow-visible{% endif %}">
        <div class="glide__slides !overflow-visible child-div:whitespace-normal">
          {% if content.field_pre_header|render or content.field_headline|render or content.field_text_column|render %}
            <div class="prose">
              {% if content.field_pre_header|render %}
                {{ content.field_pre_header }}
              {% endif %}

              {% if content.field_headline|render %}
                <h2 class="my-0">{{ paragraph.field_headline.0.value|check_markup('full_html') }}</h2>
              {% endif %}

              {{ content.field_text_column|field_value }}
            </div>
          {% endif %}

          {% for key, item in content.field_cards if key|first != '#' %}
            {{ item }}
          {% endfor %}
        </div>
      </div>

      <div class="glide__arrows flex flex-row mt-8" data-glide-el="controls">
        <button class="glide__arrow glide__arrow--left px-4 border-2 inline-block text-lg rounded-l-3xl hover:shadow-halo" data-glide-dir="<" type="button">
          &#8592;<span class="visually-hidden">{{ 'Previous'|t }}</span>
        </button>
        <button class="glide__arrow glide__arrow--right px-4 border-2 inline-block border-l-0 text-lg rounded-r-3xl hover:shadow-halo" data-glide-dir=">" type="button">
          &#8594;<span class="visually-hidden">{{ 'Next'|t }}</span>
        </button>
      </div>
    </div>
  </div>

{% endblock %}
